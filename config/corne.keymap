
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    compatible = "zmk,behavior-hold-tap";
    flavor = "hold-preferred";
    tapping-term-ms = <200>;
    require-prior-idle-ms = <190>;
    quick-tap-ms = <150>;
};

&mt {
    compatible = "zmk,behavior-hold-tap";
    flavor = "hold-preferred";
    tapping-term-ms = <200>;
    require-prior-idle-ms = <190>;
    quick-tap-ms = <150>;
};

/ {
    keymap {
        compatible = "zmk,keymap";


         default_layer {
            // ------------------------------------------------------------------------------------------------
            //| LGUI/] |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | RGUI/[ | 
            //| SHFT/` |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  | SHFT/' |
            //| LALT/\ |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RALT/- |
            //                     | RSE | SPC | LWR |   | LWR | BKSP | RSE |

            bindings = <
   &mt LWIN RBKT   &kp Q   &kp W      &kp E            &kp R      &kp T      &kp Y      &kp U      &kp I      &kp O    &kp P      &mt LWIN LBKT
 &mt LCTRL GRAVE   &kp A   &kp S      &kp D            &kp F      &kp G      &kp H      &kp J      &kp K      &kp L    &kp SEMI   &mt RCTRL SQT
   &mt LALT EQUAL  &kp Z   &kp X      &kp C            &kp V      &kp B      &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH   &kp MINUS
                                &mt LWIN TAB  &kp SPACE  &mt LSHIFT RET      &lt 1 ESC  &mt RSHIFT BSPC  &lt 2 DEL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            //|  LGUI  |  ^  |  1  |  2  |  3  |  $  |   |  &  |  [  |  ]  |  -  |  +  | RGUI/"\" |
            //|  CTRL  |  *  |  4  |  5  |  6  |  0  |   |  !  |  (  |  )  |  =  |  >  | CTRL/"|" |
            //|  LALT  | ___ |  7  |  8  |  9  |  %  |   |  @  |  {  |  }  |  #  |  <  |   RALT   |
            //                     | ___ | ___ | ADJ |   | ADJ | ___ | ___ |

            bindings = <
     &kp LGUI   &kp CARET   &kp N1  &kp N2   &kp N3   &kp DLLR          &kp AMPS   &kp LBKT   &kp RBKT   &kp MINUS   &kp PLUS   &mt LALT BSLH
     &kp LCTRL  &kp STAR    &kp N4  &kp N5   &kp N6   &kp N0            &kp EXCL   &kp LPAR   &kp RPAR   &kp EQUAL   &kp GT     &mt LCTRL PIPE
&kp LSHIFT      &trans      &kp N7  &kp N8   &kp N9   &kp PRCNT         &kp AT     &kp LBRC   &kp RBRC   &kp HASH    &kp LT     &kp RSHIFT
                                &trans  &trans  &trans        &trans &trans &lt 3 DEL  
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |       |  F1  |  F2  |  F3  |  F4  |  F5 |            |  F6  |  F7  |  F8  |  F9  |  F10  |     |
            // |       | Prev | Next | Vol - | Vol + | Play/Pause |   |      | LFT  | DWN  |  UP  | RGT   |     |     |
            // | BTCLR |      |      |      |      |      |   |       |      |      |      |      |       |     |
            //                    |     |     |    | 
            // -----------------------------------------------------------------------------------------
            //| LGUI |   F1   |   F2   |  F3  |  F4  |  F5  |            |  F6  |  F7  |  F8  |  F9  |  F10 | RGUI |
            //| CTRL |  Prev  |  Next  | Vol- | Vol+ | Play |            | LFT  | DWN  |  UP  | RGT  |  F11 | CTRL | 
            //| LALT |  ___   |   ___  |  ___ | ___  | ___  |            | ___  | ___  | ___  | ___  |  F12 | RALT |
            //                          | ___ | ___  | ADJ  |            | ADJ  | ___  | ___  |


            bindings = <
   &mt LEFT_GUI CAPS    &kp F1       &kp F2       &kp F3         &kp F4       &kp F5          &kp F6     &kp F7     &kp F8   &kp F9      &kp F10   &mt RIGHT_GUI KP_NUMLOCK
   &kp LCTRL            &kp C_PREV   &kp C_NEXT   &kp C_VOL_DN   &kp C_VOL_UP &kp C_PP        &kp LEFT   &kp DOWN   &kp UP   &kp RIGHT   &kp F11   &mt LCTRL KP_ENTER
   &mt LALT EQUAL       &trans       &trans       &trans         &trans       &trans          &kp HOME     &kp END     &trans   &trans      &kp F12   &kp RALT
                                                    &trans  &trans  &trans                &lt 3 ESC &trans   &trans
            >;
        };

        adjust_layer {
            // -----------------------------------------------------------------------------------------
            //| BLDR |     |     |     |     | Print |   |     |     |     |     |     | BLDR |
            //| BTCLR| BT0 | BT1 | BT2 | BT3 |  BT4  |   | BT4 | BT3 | BT2 | BT1 | BT0 | BTCLR|
            //|pwrOFF|NUMLK|     |     |     |       |   |     |     |     |     |     |      |
            //                   |     |     |       |   |     |     |     |

            bindings = <
       &bootloader         &none         &none         &none         &none     &kp PSCRN         &none         &none         &none         &none         &none        &bootloader
        &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0         &bt BT_CLR
 &ext_power EP_OFF    &kp KP_NUM         &none         &none         &none         &none         &none         &none         &none         &none         &none  &ext_power EP_OFF
                                                      &trans         &trans        &trans        &trans         &trans        &trans
            >;
        };
    };
};
